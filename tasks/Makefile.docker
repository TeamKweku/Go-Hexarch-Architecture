# Makefile.docker
.PHONY: docker

## Build an optimized docker Docker image.
docker/build: docker/prune
    docker build \
    --rm \
    --tag ${CODE_ODESSEY_TAG} \
    --label app=${CODE_ODESSEY_APP_NAME} \
    --build-arg PORT:${CODE_ODESSEY_DB_PORT} \
    --build-arg GO_COMPILER_CACHE=${GO_COMPILER_CACHE} \
    docker/

## Run the test suite
docker/test: docker/prune generate/data_mount_fixtures
    CODE_ODESSEY_DOCKER_BUILD_TARGET=base \
    CODE_ODESSEY_TAG=${CODE_ODESSEY_IMAGE_NAME}:test \
    docker compose run \
    --rm \
    --build \
    --volume $(shell pwd):/app \
    --env GOCACHE=/gocache \
    --volume ${GO_COMPILER_CACHE}:/gocache \
    app \
    go test -race -v -coverprofile=coverarge.txt -covermode=atomic ./...

## Run all services interactively
docker/up: docker/prune
    CODE_ODESSEY_DOCKER_BUILD_TARGET=optimized \
    docker compose up --build

## Run Postgres detached.
docker/up/postgres: docker/prune
	docker compose -f docker/docker-compose.yaml up --build --wait postgres

## Stop all services
docker/down:
	docker compose -f docker/docker-compose.yaml down


## Remove all Docker-generated artificats
docker/clean: docker/prune
	docker compose rm --stop --volumes || true
	docker image rm ${CODE_ODESSEY_IMAGE_NAME} || true
	docker image rm ${CODE_ODESSEY_IMAGE_NAME}:test || true
	docker image prune --force

## Housekeeping. Removes dangling images when docker tasks are invoked.
docker/prune:
	docker image prune --force
