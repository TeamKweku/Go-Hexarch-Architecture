name: code-odessey

services:
  app:
    image: ${CODE_ODESSEY_TAG}
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        GO_COMPILER_CACHE: ${GO_COMPILER_CACHE}
        PORT: ${CODE_ODESSEY_PORT}
      target: ${CODE_ODESSEY_DOCKER_BUILD_TARGET}
    depends_on:
      postgres:
        condition: service_healthy
    env_file: ../.env
    environment:
      - CONFIG_PATH=/home/nonroot
      - CODE_ODESSEY_DB_HOST=postgres
      - CODE_ODESSEY_DATABASE_URI=postgres://${CODE_ODESSEY_DB_USER}:${CODE_ODESSEY_DB_PASSWORD}@postgres:${CODE_ODESSEY_DB_PORT}/${CODE_ODESSEY_DB_NAME}?sslmode=${CODE_ODESSEY_DB_SSL_MODE}
    ports:
      - ${CODE_ODESSEY_PORT}:${CODE_ODESSEY_PORT}
    tty: true
    volumes:
      - type: bind
        source: ${CODE_ODESSEY_HOST_DATA_DIR}
        target: ${CODE_ODESSEY_DATA_MOUNT}
  postgres:
    image: postgres:16.0-alpine3.18
    environment:
      - POSTGRES_USER=${CODE_ODESSEY_DB_USER}
      - POSTGRES_PASSWORD=${CODE_ODESSEY_DB_PASSWORD}
      - POSTGRES_DB=${CODE_ODESSEY_DB_NAME}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${CODE_ODESSEY_DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - ${CODE_ODESSEY_DB_PUBLISHED_PORT}:5432
    volumes:
      - type: volume
        source: db_data
        target: /var/lib/postgresql/data

volumes:
  db_data:
    name: ${CODE_ODESSEY_DB_VOLUME}
